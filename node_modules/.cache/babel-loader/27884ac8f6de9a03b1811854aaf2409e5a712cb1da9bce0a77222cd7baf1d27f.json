{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nathangage/Desktop/OpenAI/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _toConsumableArray from \"/Users/nathangage/Desktop/OpenAI/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"/Users/nathangage/Desktop/OpenAI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/nathangage/Desktop/OpenAI/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/nathangage/Desktop/OpenAI/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport OpenAI from \"openai-api\";\nimport { useState, useRef } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Form } from \"react-bootstrap\";\nimport Response from \"./Response\";\nimport Header from \"./Header\";\n\n// require(\"dotenv\").config();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar openai = new OpenAI(process.env.REACT_APP_OPENAI_API);\nexport default function App() {\n  _s();\n  var _this = this;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    output = _useState2[0],\n    setOutput = _useState2[1];\n  var inputRef = useRef();\n  var input = \"\";\n  function handleSubmit(submitEvent) {\n    // prevent reloading\n    submitEvent.preventDefault();\n    input = inputRef.current.value;\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return openai.complete({\n              engine: \"text-davinci-003\",\n              prompt: input,\n              maxTokens: 500,\n              temperature: 0.7,\n              topP: 1,\n              presencePenalty: 0,\n              frequencyPenalty: 0,\n              bestOf: 1\n            });\n          case 2:\n            res = _context.sent;\n            console.log(res);\n            setOutput(function (prevOutputs) {\n              return [].concat(_toConsumableArray(prevOutputs), [{\n                response: res.data.choices[0].text,\n                prompt: input\n              }]);\n            });\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"What would you like to tell davinci?\",\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Let's try\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), output.map(function (responseItem, index) {\n      return /*#__PURE__*/_jsxDEV(Response, {\n        id: index,\n        content: responseItem\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }, _this);\n    })]\n  }, void 0, true);\n}\n_s(App, \"uLwR+zaNLqJR6eeUIaua6hRGzmA=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["OpenAI","useState","useRef","Button","Form","Response","Header","openai","process","env","REACT_APP_OPENAI_API","App","output","setOutput","inputRef","input","handleSubmit","submitEvent","preventDefault","current","value","complete","engine","prompt","maxTokens","temperature","topP","presencePenalty","frequencyPenalty","bestOf","res","console","log","prevOutputs","response","data","choices","text","map","responseItem","index"],"sources":["/Users/nathangage/Desktop/OpenAI/src/components/App.jsx"],"sourcesContent":["import OpenAI from \"openai-api\";\nimport { useState, useRef } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Form } from \"react-bootstrap\";\n\nimport Response from \"./Response\";\nimport Header from \"./Header\";\n\n// require(\"dotenv\").config();\nconst openai = new OpenAI(process.env.REACT_APP_OPENAI_API);\n\nexport default function App() {\n  const [output, setOutput] = useState([]);\n  const inputRef = useRef();\n  let input = \"\";\n  function handleSubmit(submitEvent) {\n    // prevent reloading\n    submitEvent.preventDefault();\n    input = inputRef.current.value;\n    (async () => {\n      const res = await openai.complete({\n        engine: \"text-davinci-003\",\n        prompt: input,\n        maxTokens: 500,\n        temperature: 0.7,\n        topP: 1,\n        presencePenalty: 0,\n        frequencyPenalty: 0,\n        bestOf: 1,\n      });\n\n      console.log(res);\n\n      setOutput((prevOutputs) => {\n        return [\n          ...prevOutputs,\n          { response: res.data.choices[0].text, prompt: input },\n        ];\n      });\n    })();\n  }\n\n  return (\n    <>\n      <Header />\n      <Form onSubmit={handleSubmit}>\n        <Form.Group>\n          <Form.Control\n            placeholder=\"What would you like to tell davinci?\"\n            ref={inputRef}\n          />\n          <Button type=\"submit\">Let's try</Button>\n        </Form.Group>\n      </Form>\n      {output.map((responseItem, index) => {\n        return <Response key={index} id={index} content={responseItem} />;\n      })}\n    </>\n  );\n}\n"],"mappings":";;;;;;AAAA,OAAOA,MAAM,MAAM,YAAY;AAC/B,SAASC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,OAAO,sCAAsC;AAC7C,SAASC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAE9C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AAAA;AAAA;AACA,IAAMC,MAAM,GAAG,IAAIP,MAAM,CAACQ,OAAO,CAACC,GAAG,CAACC,oBAAoB,CAAC;AAE3D,eAAe,SAASC,GAAG,GAAG;EAAA;EAAA;EAC5B,gBAA4BV,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAjCW,MAAM;IAAEC,SAAS;EACxB,IAAMC,QAAQ,GAAGZ,MAAM,EAAE;EACzB,IAAIa,KAAK,GAAG,EAAE;EACd,SAASC,YAAY,CAACC,WAAW,EAAE;IACjC;IACAA,WAAW,CAACC,cAAc,EAAE;IAC5BH,KAAK,GAAGD,QAAQ,CAACK,OAAO,CAACC,KAAK;IAC9B,2DAAC;MAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACmBb,MAAM,CAACc,QAAQ,CAAC;cAChCC,MAAM,EAAE,kBAAkB;cAC1BC,MAAM,EAAER,KAAK;cACbS,SAAS,EAAE,GAAG;cACdC,WAAW,EAAE,GAAG;cAChBC,IAAI,EAAE,CAAC;cACPC,eAAe,EAAE,CAAC;cAClBC,gBAAgB,EAAE,CAAC;cACnBC,MAAM,EAAE;YACV,CAAC,CAAC;UAAA;YATIC,GAAG;YAWTC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;YAEhBjB,SAAS,CAAC,UAACoB,WAAW,EAAK;cACzB,oCACKA,WAAW,IACd;gBAAEC,QAAQ,EAAEJ,GAAG,CAACK,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;gBAAEd,MAAM,EAAER;cAAM,CAAC;YAEzD,CAAC,CAAC;UAAC;UAAA;YAAA;QAAA;MAAA;IAAA,CACJ,IAAG;EACN;EAEA,oBACE;IAAA,wBACE,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV,QAAC,IAAI;MAAC,QAAQ,EAAEC,YAAa;MAAA,uBAC3B,QAAC,IAAI,CAAC,KAAK;QAAA,wBACT,QAAC,IAAI,CAAC,OAAO;UACX,WAAW,EAAC,sCAAsC;UAClD,GAAG,EAAEF;QAAS;UAAA;UAAA;UAAA;QAAA,QACd,eACF,QAAC,MAAM;UAAC,IAAI,EAAC,QAAQ;UAAA,UAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IAC7B;MAAA;MAAA;MAAA;IAAA,QACR,EACNF,MAAM,CAAC0B,GAAG,CAAC,UAACC,YAAY,EAAEC,KAAK,EAAK;MACnC,oBAAO,QAAC,QAAQ;QAAa,EAAE,EAAEA,KAAM;QAAC,OAAO,EAAED;MAAa,GAAxCC,KAAK;QAAA;QAAA;QAAA;MAAA,SAAsC;IACnE,CAAC,CAAC;EAAA,gBACD;AAEP;AAAC,GAhDuB7B,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}